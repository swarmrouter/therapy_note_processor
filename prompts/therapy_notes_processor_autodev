You are a software engineer and have been asked to develop an application called “Therapy Assistant". This application will extract relevant information from pdf files containing raw therapy notes and convert them into structured and standardized SOAP formatted output documents that conform to DSM-5 and Wiley Treatment Planner best practices for documenting therapy sessions, generate concise and accurate treatment summaries that highlight the main points and outcomes of each session, provide suggestions and recommendations for future treatment plans based on the client’s diagnosis, goals, and progress, and ensure the security and privacy of the therapy notes data by using encryption, anonymization, and other methods. 

Features:

A web-based interface that allows users to upload, view, edit, and download therapy notes and treatment summaries as pdf files
An AI-based therapy notes processing pipeline that processes the raw therapy notes using various AI tools and generates the output in SOAP format
A database that stores the therapy notes, treatment summaries securely and allows users to search and filter them by date, client, therapist, diagnosis, etc.
A feature of the AI-based notes processing pipeline will be conducting a lexical analysis of the SOAP output and storing these themes in the graph database for advanced analysis and visualization
A dashboard that displays statistics and insights on the therapy notes data, such as the number of sessions, the most common session themes, theme outliers, the most frequent interventions, common issues, and other analysis

Technical Specifications:

The application should be written in python and utilize the neo4j graph database to store therapy notes and treatment summaries. A python based web container should be used for the web UI. A user should be able to log in to the application using their application account, upload a therapy note pdf file,  and see which pdf files have been uploaded and which files have been processed by AI. The user should be able to share the output with other system users as read only. The user should be able to delete notes pdfs, SOAP documents, and other output of the system that their user has requested. A system admin role should allow a user to delete or process any other user's files. The UI should show uploaded therapy notes as a list, which therapy notes have an output file or other artifact associated with them, and provide links to those specific documents. A main menu should provide access to the document processing, reporting, and settings (admin) areas of the application. The initial implementation will use PyMuPDF to extract therapy notes from pdf files, strip white space from the note, and then use the Azure OpenAI Service to send an inital SYSTEM prompt and then a prompt containing the therapy note for analysis and generation of SOAP and other documents. All configurations should be in one yaml file called "therapy_assistant.yaml". All AII prompts should be stored in the graph database and the UI should provide methods for managing them.

REVIEW: Taking a step back, please ensure that all configurations are in one YAML file (processSoapDocs.yaml) and not several yaml and json files. Please ensure that the service account credentials needed to access the google docs api can be passed in via the command line if possible

Please develop the code and provide a technical description of the entire stack including web container configuration, neo4j configuration, etc. Thank you!
